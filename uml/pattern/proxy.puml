@startuml
'https://plantuml.com/class-diagram

interface Subject{
  request()
}
note top
Proxy와 RealSubject 모두 Subject 인터페이스를 구현
이러면 어떤 클라이언트에서든 프록시를 주제와
똑같은 식으로 다룰 수 있다.
end note
class RealSubject{
  request()
}
note bottom
RealSubject는 진짜 작업을
대부분 처리하는 객체
Proxy는 그 객체로의 접근을 제어
end note
class Proxy{
  request()
}
note bottom
Proxy에는 진짜 작업을
처리하는 객체의 레퍼런스가 들어있다.
진짜 객체가 필요하면 그 레퍼런스를 사용해서
요청을 전달
end note

RealSubject -u-|> Subject
Proxy -u-|> Subject
Proxy -l-> RealSubject : subject
note bottom on link
proxy에서 realSubject의
인스턴스를 생성하거나
그 객체의 생성과정에 관여
하는 경우가 많다.
end note

@enduml